name: Process TAR Artifacts

on:
  # schedule:
  #   - cron: '0 10 * * *'
  repository_dispatch:
    types: [staging-build-tar]
  push:
    branches:
      - "gantt-chart-it"
 
jobs:
    
  # Test-Gantt-Chart-NoSec:
  #   runs-on: [ubuntu-18.04]
  #   name: Test-Gantt-Chart-NoSec
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       java: [14]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up AWS Cred
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1

  #     - name: Install required Packages
  #       run: release-tools/scripts/required_packages.sh

  #     - name: Retrieve plugin tags 
  #       run: |
  #         echo "p_tag_gantt_chart=$(release-tools/scripts/plugin_tag.sh opendistro-for-elasticsearch/kibana-visualizations)" >> $GITHUB_ENV
  #         echo "es_version=$(release-tools/scripts/version-info.sh --es)" >> $GITHUB_ENV
          
  #     - name: Checkout Kibana
  #       uses: actions/checkout@v2
  #       with:
  #         repository: opendistro-for-elasticsearch/kibana-oss
  #         ref: ${{env.es_version}}
  #         token: ${{ secrets.ODFE_RELEASE_BOT_PUBLIC_PRIVATE_READ_WRITE_TOKEN }}
  #         path: kibana
           
  #     - uses: actions/checkout@v2
  #       with:
  #         repository: opendistro-for-elasticsearch/kibana-visualizations
  #         # ref: ${{env.p_tag_gantt_chart}}
  #         ref: main
  #         path: kibana/plugins/kibana-visualizations
      
  #     - name: Setup Java
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: ${{ matrix.java }}
      
  #     - name: Get node and yarn versions
  #       id: node_yarn_versions
  #       run: |
  #         echo "kibana_node_version=$(node -p "(require('./kibana/package.json').engines.node).match(/[.0-9]+/)[0]")" >> $GITHUB_ENV
  #         echo "kibana_yarn_version=$(node -p "(require('./kibana/package.json').engines.yarn).match(/[.0-9]+/)[0]")" >> $GITHUB_ENV   
      
  #     - name: Setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{env.kibana_node_version}}
  #         registry-url: 'https://registry.npmjs.org'
      
  #     - name: Install correct yarn version for Kibana
  #       run: |
  #         npm uninstall -g yarn
  #         echo "Installing yarn ${{ env.kibana_yarn_version }}"
  #         npm i -g yarn@${{ env.kibana_yarn_version }}
      
  #     - name: Bootstrap the plugin
  #       run: |
  #         cd ./kibana/plugins
  #         ls -ltr
  #         cp -rp kibana-visualizations/gantt-chart/ .
  #         rm -rf kibana-visualizations/
  #         cd gantt-chart
  #         ls -ltr
  #         yarn kbn bootstrap

  #     - name: Start ES and Kibana
  #       run: |
  #         release-tools/scripts/setup_runners_service.sh zip --kibana-nosec
  #         echo "load the indices"
  #         curl -s https://raw.githubusercontent.com/opendistro-for-elasticsearch/kibana-visualizations/main/gantt-chart/.cypress/utils/jaeger-sample.json | curl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/jaeger/_bulk?pretty' --data-binary @-
  #         curl -X POST "localhost:5601/api/saved_objects/index-pattern/jaeger"  -H 'kbn-xsrf: true' -H 'Content-Type: application/json' -d '{ "attributes": { "title": "jaeger" } }'
 
  #     - name: run IT
  #       uses: cypress-io/github-action@v2.5.0
  #       with:
  #         working-directory: kibana/plugins/gantt-chart
  #         command: npx cypress run

  Test-Kibana-Reports-NoSec:
    runs-on: [ubuntu-18.04]
    name: Test-Kibana-Reports-NoSec
    strategy:
      fail-fast: false
      matrix:
        java: [14]
    steps:
      - uses: actions/checkout@v2
      - name: Set up AWS Cred
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install required Packages
        run: release-tools/scripts/required_packages.sh

      - name: Retrieve plugin tags 
        run: |
          echo "p_tag_kib_reports=$(release-tools/scripts/plugin_tag.sh opendistro-for-elasticsearch/kibana-reports)" >> $GITHUB_ENV
          echo "es_version=$(release-tools/scripts/version-info.sh --es)" >> $GITHUB_ENV
          
      - name: Checkout Kibana
        uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/kibana-oss
          ref: ${{env.es_version}}
          token: ${{ secrets.ODFE_RELEASE_BOT_PUBLIC_PRIVATE_READ_WRITE_TOKEN }}
          path: kibana
           
      - uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/kibana-reports
          # ref: ${{env.p_tag_gantt_chart}}
          ref: dev
          path: kibana/plugins/kibana-rep
      
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      
      - name: Get node and yarn versions
        id: node_yarn_versions
        run: |
          echo "kibana_node_version=$(node -p "(require('./kibana/package.json').engines.node).match(/[.0-9]+/)[0]")" >> $GITHUB_ENV
          echo "kibana_yarn_version=$(node -p "(require('./kibana/package.json').engines.yarn).match(/[.0-9]+/)[0]")" >> $GITHUB_ENV   
      
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{env.kibana_node_version}}
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install correct yarn version for Kibana
        run: |
          npm uninstall -g yarn
          echo "Installing yarn ${{ env.kibana_yarn_version }}"
          npm i -g yarn@${{ env.kibana_yarn_version }}
      
      - name: Bootstrap the plugin
        run: |
          cd ./kibana/plugins
          ls -ltr
          cp -rp kibana-rep/kibana-reports .
          rm -rf kibana-rep/
          cd kibana-reports
          ls -ltr
          pwd
          yarn kbn bootstrap

      - name: Start ES and Kibana
        run: |
          release-tools/scripts/setup_runners_service.sh deb --kibana-nosec
          echo "Add sample data"
          curl -XPOST 'http://localhost:5601/api/sample_data/flights' -H 'kbn-xsrf: true' -H 'Content-Type: application/json'

      - name: Run IT
        uses: cypress-io/github-action@v2.5.0
        with:
          working-directory: kibana/plugins/kibana-reports
          command: yarn cypress:run